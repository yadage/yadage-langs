eventselection:
  environment: reanahub/reana-demo-atlas-recast-eventselection
  cmd: |
    source /home/atlas/release_setup.sh
    source /analysis/build/x86*/setup.sh
    cat << 'EOF' > recast_xsecs.txt
    id/I:name/C:xsec/F:kfac/F:eff/F:relunc/F
    {inp[init.did]} name {inp[init.xsec]} 1.0 1.0 1.0
    EOF
    echo {inp[init.url]} > recast_inputs.txt
    myEventSelection {workdir[submit]} recast_inputs.txt recast_xsecs.txt 30 #(=lumi)
  output:
    signalfile: workdir['submit/hist-sample.root']
statanalysis:
  environment: reanahub/reana-demo-atlas-recast-statanalysis
  cmd: |
    source /home/atlas/release_setup.sh
    python /code/make_ws.py /code/data/data.root {inp[eventselection.signalfile]} /code/data/background.root
    resultdir={workdir[fitresults]}
    mkdir -p $resultdir
    python /code/plot.py /code/results/meas_combined_meas_model.root $resultdir/pre.png $resultdir/post.png
    python /code/set_limit.py results/meas_combined_meas_model.root \
           $resultdir/limit.png $result/limit_data.json \
           $resultdir/limit_data_nomsignal.json
  output:
    limit:  workdir['fitresults/limit_data.json']
